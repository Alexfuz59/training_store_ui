{"uid":"b36d1b90ebe2cc0e","name":"Show 12 products per page","fullName":"tests.test_catalog.TestCatalogPrice#test_show12","historyId":"f271bce054a8fe0260556020baf01e2d","time":{"start":1711295100975,"stop":1711295103568,"duration":2593},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button mat-menu-item=\"\" class=\"mat-focus-indicator mat-menu-item ng-tns-c61-3 cdk-focused cdk-mouse-focused\" role=\"menuitem\" tabindex=\"0\" aria-disabled=\"false\">...</button> is not clickable at point (723, 169). Other element would receive the click: <div class=\"cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing\"></div>\n  (Session info: chrome-headless-shell=122.0.6261.128)\nStacktrace:\n#0 0x558a6e94ef33 <unknown>\n#1 0x558a6e646ce6 <unknown>\n#2 0x558a6e698a73 <unknown>\n#3 0x558a6e69698e <unknown>\n#4 0x558a6e694367 <unknown>\n#5 0x558a6e693732 <unknown>\n#6 0x558a6e686d27 <unknown>\n#7 0x558a6e6b3eb2 <unknown>\n#8 0x558a6e6866b8 <unknown>\n#9 0x558a6e6b407e <unknown>\n#10 0x558a6e6d2899 <unknown>\n#11 0x558a6e6b3c53 <unknown>\n#12 0x558a6e684db3 <unknown>\n#13 0x558a6e68577e <unknown>\n#14 0x558a6e91486b <unknown>\n#15 0x558a6e918885 <unknown>\n#16 0x558a6e902181 <unknown>\n#17 0x558a6e919412 <unknown>\n#18 0x558a6e8e625f <unknown>\n#19 0x558a6e93d528 <unknown>\n#20 0x558a6e93d723 <unknown>\n#21 0x558a6e94e0e4 <unknown>\n#22 0x7fc62ce94ac3 <unknown>","statusTrace":"self = <test_catalog.TestCatalogPrice object at 0x7f001ae68c80>\n\n    @allure.title(\"Show 12 products per page\")\n    def test_show12(self):\n        self.catalog_page.open()\n        self.catalog_page.is_opened()\n        self.catalog_page.button_show_click()\n        self.catalog_page.button_show24_click()\n        self.catalog_page.button_show_click()\n>       self.catalog_page.button_show12_click()\n\ntests/test_catalog.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:64: in button_show12_click\n    self.wait.until(EC.element_to_be_clickable(self.BUTTON_SHOW12)).click()\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f001aee5850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x558a6e93d723 \\\\u003Cunknown>\\\\n#21 0x558a6e94e0e4 \\\\u003Cunknown>\\\\n#22 0x7fc62ce94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button mat-menu-item=\"\" class=\"mat-focus-indicator mat-menu-item ng-tns-c61-3 cdk-focused cdk-mouse-focused\" role=\"menuitem\" tabindex=\"0\" aria-disabled=\"false\">...</button> is not clickable at point (723, 169). Other element would receive the click: <div class=\"cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing\"></div>\nE         (Session info: chrome-headless-shell=122.0.6261.128)\nE       Stacktrace:\nE       #0 0x558a6e94ef33 <unknown>\nE       #1 0x558a6e646ce6 <unknown>\nE       #2 0x558a6e698a73 <unknown>\nE       #3 0x558a6e69698e <unknown>\nE       #4 0x558a6e694367 <unknown>\nE       #5 0x558a6e693732 <unknown>\nE       #6 0x558a6e686d27 <unknown>\nE       #7 0x558a6e6b3eb2 <unknown>\nE       #8 0x558a6e6866b8 <unknown>\nE       #9 0x558a6e6b407e <unknown>\nE       #10 0x558a6e6d2899 <unknown>\nE       #11 0x558a6e6b3c53 <unknown>\nE       #12 0x558a6e684db3 <unknown>\nE       #13 0x558a6e68577e <unknown>\nE       #14 0x558a6e91486b <unknown>\nE       #15 0x558a6e918885 <unknown>\nE       #16 0x558a6e902181 <unknown>\nE       #17 0x558a6e919412 <unknown>\nE       #18 0x558a6e8e625f <unknown>\nE       #19 0x558a6e93d528 <unknown>\nE       #20 0x558a6e93d723 <unknown>\nE       #21 0x558a6e94e0e4 <unknown>\nE       #22 0x7fc62ce94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1711295100787,"stop":1711295100974,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1711295100974,"stop":1711295100974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button mat-menu-item=\"\" class=\"mat-focus-indicator mat-menu-item ng-tns-c61-3 cdk-focused cdk-mouse-focused\" role=\"menuitem\" tabindex=\"0\" aria-disabled=\"false\">...</button> is not clickable at point (723, 169). Other element would receive the click: <div class=\"cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing\"></div>\n  (Session info: chrome-headless-shell=122.0.6261.128)\nStacktrace:\n#0 0x558a6e94ef33 <unknown>\n#1 0x558a6e646ce6 <unknown>\n#2 0x558a6e698a73 <unknown>\n#3 0x558a6e69698e <unknown>\n#4 0x558a6e694367 <unknown>\n#5 0x558a6e693732 <unknown>\n#6 0x558a6e686d27 <unknown>\n#7 0x558a6e6b3eb2 <unknown>\n#8 0x558a6e6866b8 <unknown>\n#9 0x558a6e6b407e <unknown>\n#10 0x558a6e6d2899 <unknown>\n#11 0x558a6e6b3c53 <unknown>\n#12 0x558a6e684db3 <unknown>\n#13 0x558a6e68577e <unknown>\n#14 0x558a6e91486b <unknown>\n#15 0x558a6e918885 <unknown>\n#16 0x558a6e902181 <unknown>\n#17 0x558a6e919412 <unknown>\n#18 0x558a6e8e625f <unknown>\n#19 0x558a6e93d528 <unknown>\n#20 0x558a6e93d723 <unknown>\n#21 0x558a6e94e0e4 <unknown>\n#22 0x7fc62ce94ac3 <unknown>","statusTrace":"self = <test_catalog.TestCatalogPrice object at 0x7f001ae68c80>\n\n    @allure.title(\"Show 12 products per page\")\n    def test_show12(self):\n        self.catalog_page.open()\n        self.catalog_page.is_opened()\n        self.catalog_page.button_show_click()\n        self.catalog_page.button_show24_click()\n        self.catalog_page.button_show_click()\n>       self.catalog_page.button_show12_click()\n\ntests/test_catalog.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:64: in button_show12_click\n    self.wait.until(EC.element_to_be_clickable(self.BUTTON_SHOW12)).click()\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f001aee5850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x558a6e93d723 \\\\u003Cunknown>\\\\n#21 0x558a6e94e0e4 \\\\u003Cunknown>\\\\n#22 0x7fc62ce94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button mat-menu-item=\"\" class=\"mat-focus-indicator mat-menu-item ng-tns-c61-3 cdk-focused cdk-mouse-focused\" role=\"menuitem\" tabindex=\"0\" aria-disabled=\"false\">...</button> is not clickable at point (723, 169). Other element would receive the click: <div class=\"cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing\"></div>\nE         (Session info: chrome-headless-shell=122.0.6261.128)\nE       Stacktrace:\nE       #0 0x558a6e94ef33 <unknown>\nE       #1 0x558a6e646ce6 <unknown>\nE       #2 0x558a6e698a73 <unknown>\nE       #3 0x558a6e69698e <unknown>\nE       #4 0x558a6e694367 <unknown>\nE       #5 0x558a6e693732 <unknown>\nE       #6 0x558a6e686d27 <unknown>\nE       #7 0x558a6e6b3eb2 <unknown>\nE       #8 0x558a6e6866b8 <unknown>\nE       #9 0x558a6e6b407e <unknown>\nE       #10 0x558a6e6d2899 <unknown>\nE       #11 0x558a6e6b3c53 <unknown>\nE       #12 0x558a6e684db3 <unknown>\nE       #13 0x558a6e68577e <unknown>\nE       #14 0x558a6e91486b <unknown>\nE       #15 0x558a6e918885 <unknown>\nE       #16 0x558a6e902181 <unknown>\nE       #17 0x558a6e919412 <unknown>\nE       #18 0x558a6e8e625f <unknown>\nE       #19 0x558a6e93d528 <unknown>\nE       #20 0x558a6e93d723 <unknown>\nE       #21 0x558a6e94e0e4 <unknown>\nE       #22 0x7fc62ce94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open URL","time":{"start":1711295100975,"stop":1711295102164,"duration":1189},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Check is opened URL","time":{"start":1711295102164,"stop":1711295102168,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click the show button","time":{"start":1711295102168,"stop":1711295102245,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click button show by 24","time":{"start":1711295102245,"stop":1711295102426,"duration":181},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click the show button","time":{"start":1711295102426,"stop":1711295102472,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click button show by 12","time":{"start":1711295102472,"stop":1711295103566,"duration":1094},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button mat-menu-item=\"\" class=\"mat-focus-indicator mat-menu-item ng-tns-c61-3 cdk-focused cdk-mouse-focused\" role=\"menuitem\" tabindex=\"0\" aria-disabled=\"false\">...</button> is not clickable at point (723, 169). Other element would receive the click: <div class=\"cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing\"></div>\n  (Session info: chrome-headless-shell=122.0.6261.128)\nStacktrace:\n#0 0x558a6e94ef33 <unknown>\n#1 0x558a6e646ce6 <unknown>\n#2 0x558a6e698a73 <unknown>\n#3 0x558a6e69698e <unknown>\n#4 0x558a6e694367 <unknown>\n#5 0x558a6e693732 <unknown>\n#6 0x558a6e686d27 <unknown>\n#7 0x558a6e6b3eb2 <unknown>\n#8 0x558a6e6866b8 <unknown>\n#9 0x558a6e6b407e <unknown>\n#10 0x558a6e6d2899 <unknown>\n#11 0x558a6e6b3c53 <unknown>\n#12 0x558a6e684db3 <unknown>\n#13 0x558a6e68577e <unknown>\n#14 0x558a6e91486b <unknown>\n#15 0x558a6e918885 <unknown>\n#16 0x558a6e902181 <unknown>\n#17 0x558a6e919412 <unknown>\n#18 0x558a6e8e625f <unknown>\n#19 0x558a6e93d528 <unknown>\n#20 0x558a6e93d723 <unknown>\n#21 0x558a6e94e0e4 <unknown>\n#22 0x7fc62ce94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/training_store_ui/training_store_ui/pages/catalog_page.py\", line 64, in button_show12_click\n    self.wait.until(EC.element_to_be_clickable(self.BUTTON_SHOW12)).click()\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1711295103604,"stop":1711295103663,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Product catalog"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_catalog"},{"name":"subSuite","value":"TestCatalogPrice"},{"name":"host","value":"fv-az1391-496"},{"name":"thread","value":"1799-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_catalog"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"2bd1149a66056bf1","status":"passed","time":{"start":1709910669255,"stop":1709910673858,"duration":4603}}]},"tags":[]},"source":"b36d1b90ebe2cc0e.json","parameterValues":[]}